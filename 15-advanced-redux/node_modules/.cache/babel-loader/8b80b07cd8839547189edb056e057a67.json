{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React_DOM\\\\15-advanced-redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const showCart = useSelector(state => state.ui.cartIsShown);\n  const cart = useSelector(state => state.cart);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    setHasError(false);\n\n    try {\n      const sendCartData = async () => {\n        const response = await fetch(\"https://react-http-c0588-default-rtdb.firebaseio.com/cart.json\", {\n          method: \"PUT\",\n          body: JSON.stringify(cart)\n        });\n\n        if (!response.ok) {\n          setHasError(true);\n          throw new Error();\n        }\n\n        const responseData = await response.json();\n      };\n    } catch (e) {\n      console.log('fetch failed');\n    }\n\n    setIsLoading(false);\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"heuDiybCUiQiPmH2bfNA5M3murE=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Dev/React_DOM/15-advanced-redux/src/App.js"],"names":["useEffect","useSelector","Cart","Layout","Products","App","showCart","state","ui","cartIsShown","cart","isLoading","setIsLoading","useState","hasError","setHasError","sendCartData","response","fetch","method","body","JSON","stringify","ok","Error","responseData","json","e","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,WAArB,CAA5B;AACA,QAAMC,IAAI,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,KAAD,CAAxC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,QAAG;AACD,YAAMC,YAAY,GAAG,YAAY;AAC/B,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,UAAAA,MAAM,EAAE,KADV;AAEEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAFR,SAF0B,CAA5B;;AAOA,YAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChBR,UAAAA,WAAW,CAAC,IAAD,CAAX;AACA,gBAAM,IAAIS,KAAJ,EAAN;AACD;;AACD,cAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACD,OAbD;AAcD,KAfD,CAgBA,OAAOC,CAAP,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAvBQ,EAuBN,CAACF,IAAD,CAvBM,CAAT;AAwBA,sBACE,QAAC,MAAD;AAAA,eACGJ,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApCQD,G;UACUJ,W,EACJA,W;;;KAFNI,G;AAsCT,eAAeA,GAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Products from \"./components/Shop/Products\";\r\n\r\nfunction App() {\r\n  const showCart = useSelector((state) => state.ui.cartIsShown);\r\n  const cart = useSelector((state) => state.cart);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setHasError(false);\r\n    try{\r\n      const sendCartData = async () => {\r\n        const response = await fetch(\r\n          \"https://react-http-c0588-default-rtdb.firebaseio.com/cart.json\",\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          setHasError(true)\r\n          throw new Error();\r\n        }\r\n        const responseData = await response.json();\r\n      };\r\n    }\r\n    catch (e){\r\n      console.log('fetch failed');\r\n    }\r\n    setIsLoading(false);\r\n  }, [cart]);\r\n  return (\r\n    <Layout>\r\n      {showCart && <Cart />}\r\n      <Products />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}