{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore(reducer = {\n  counter: counterSlice.reducer,\n  Auth: authSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["D:/Dev/React/14-redux-with-react/src/store/index.js"],"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","initialCounterState","counter","showCounter","counterSlice","increment","decrement","increase","action","payload","toggleCounter","store","reducer","Auth","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAAzB;AAIA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEJ,gBAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAIRO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACD;;AANO;AAHkB,CAAD,CAA7B;AAYA,MAAMQ,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CADiB;AAE1BC,EAAAA,WAAW,EAAE;AAFa,CAA5B;AAKA,MAAMC,YAAY,GAAGd,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEK,mBAFiB;AAG/BJ,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,SAAS,CAACN,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACG,OAAN;AACD,KAHO;;AAIRI,IAAAA,SAAS,CAACP,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACG,OAAN;AACD,KANO;;AAORK,IAAAA,QAAQ,CAACR,KAAD,EAAQS,MAAR,EAAgB;AACtBT,MAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,GAAgBM,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACX,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACI,WAAN,GAAoB,CAACJ,KAAK,CAACI,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMQ,KAAK,GAAGpB,cAAc,CAC1BqB,OAAO,GAAG;AAAEV,EAAAA,OAAO,EAAEE,YAAY,CAACQ,OAAxB;AAAiCC,EAAAA,IAAI,EAAEnB,SAAS,CAACkB;AAAjD,CADgB,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGV,YAAY,CAACW,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGtB,SAAS,CAACqB,OAA9B;AAEP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\nconst initialCounterState = {\r\n  counter: 0,\r\n  showCounter: true,\r\n};\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore(\r\n  reducer = { counter: counterSlice.reducer, Auth: authSlice.reducer },\r\n);\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}