{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\14-redux-with-react\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\n//import { Component } from 'react';\nimport { useSelector, useDispatch\n/*connect*/\n} from 'react-redux';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const showCounter = useSelector(state => state.showCounter);\n  const dispatch = useDispatch();\n\n  const incHandler = () => {\n    dispatch({\n      type: 'INCREMENT'\n    });\n  };\n\n  const incrementBy5Handler = () => {\n    dispatch({\n      type: 'INCREMENT',\n      times: 5\n    });\n  };\n\n  const increaseBy5Handler = () => {\n    dispatch({\n      type: 'INCREASE',\n      amount: 10\n    });\n  };\n\n  const decHandler = () => {\n    dispatch({\n      type: 'DECREMENT'\n    });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showCounter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incHandler,\n        children: \"inc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementBy5Handler,\n        children: \"increment by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseBy5Handler,\n        children: \"increase by 10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decHandler,\n        children: \"dec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}; // class Counter extends Component {\n//   incHandler() { this.props.increment(); }\n//   decHandler() { this.props.decrement(); }\n//   toggleCounterHandler() {}\n//   render() {\n//     return(\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incHandler.bind(this)}>inc</button>\n//           <button onClick={this.decHandler.bind(this)}>dec</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     )\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   }\n// }\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({type: 'INCREMENT'}),\n//     decrement: () => dispatch({type: 'DECREMENT'}),\n//   }\n// }\n\n\n_s(Counter, \"IwOLicdTrYJkh91+ARWTVuVXcmI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default\n/*connect(mapStateToProps, mapDispatchToProps )(*/\nCounter\n/*)*/\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/Dev/React/14-redux-with-react/src/components/Counter.js"],"names":["useSelector","useDispatch","classes","Counter","counter","state","showCounter","dispatch","incHandler","type","incrementBy5Handler","times","increaseBy5Handler","amount","decHandler","toggleCounterHandler","value"],"mappings":";;;AAAA;AACA,SAASA,WAAT,EAAsBC;AAAa;AAAnC,OAAqD,aAArD;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,WAAW,GAAGN,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAG,MAAM;AAChCH,IAAAA,QAAQ,CAAE;AAAEE,MAAAA,IAAI,EAAE,WAAR;AAAqBE,MAAAA,KAAK,EAAE;AAA5B,KAAF,CAAR;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,QAAQ,CAAE;AAAEE,MAAAA,IAAI,EAAE,UAAR;AAAoBI,MAAAA,MAAM,EAAE;AAA5B,KAAF,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;AACD,GAFD;;AAIA,QAAMM,oBAAoB,GAAG,MAAM;AACjCR,IAAAA,QAAQ,CAAE;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAF,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,WAAW,iBAAI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACc,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFlB,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAQ,MAAA,OAAO,EAAEC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArCD,C,CAuCA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;GAxEMZ,O;UACYH,W,EACIA,W,EACHC,W;;;KAHbE,O;AA2EN;AAAe;AAAkDA;AAAO;AAAxE","sourcesContent":["//import { Component } from 'react';\r\nimport { useSelector, useDispatch, /*connect*/ }from 'react-redux'\r\n\r\nimport classes from './Counter.module.css';\r\n\r\nconst Counter = () => {\r\n  const counter = useSelector(state => state.counter);\r\n  const showCounter = useSelector(state => state.showCounter);\r\n  const dispatch = useDispatch();\r\n\r\n  const incHandler = () => {\r\n    dispatch( { type: 'INCREMENT', })\r\n  }\r\n  const incrementBy5Handler = () => {\r\n    dispatch( { type: 'INCREMENT', times: 5 });\r\n  }\r\n\r\n  const increaseBy5Handler = () => {\r\n    dispatch( { type: 'INCREASE', amount: 10 });\r\n  }\r\n\r\n  const decHandler = () => {\r\n    dispatch( { type: 'DECREMENT', })\r\n  }\r\n\r\n  const toggleCounterHandler = () => {\r\n    dispatch( {type: 'TOGGLE'})\r\n  }\r\n\r\n  return (\r\n    <main className={classes.counter}>\r\n      <h1>Redux Counter</h1>\r\n      {showCounter && <div className={classes.value}>{counter}</div>}\r\n      <div>\r\n        <button onClick={incHandler}>inc</button>\r\n        <button onClick={incrementBy5Handler}>increment by 5</button>\r\n        <button onClick={increaseBy5Handler}>increase by 10</button>\r\n        <button onClick={decHandler}>dec</button>\r\n      </div>\r\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\r\n    </main>\r\n  );\r\n};\r\n\r\n// class Counter extends Component {\r\n//   incHandler() { this.props.increment(); }\r\n\r\n//   decHandler() { this.props.decrement(); }\r\n\r\n//   toggleCounterHandler() {}\r\n\r\n//   render() {\r\n//     return(\r\n//       <main className={classes.counter}>\r\n//         <h1>Redux Counter</h1>\r\n//         <div className={classes.value}>{this.props.counter}</div>\r\n//         <div>\r\n//           <button onClick={this.incHandler.bind(this)}>inc</button>\r\n//           <button onClick={this.decHandler.bind(this)}>dec</button>\r\n//         </div>\r\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\r\n//       </main>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     counter: state.counter\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     increment: () => dispatch({type: 'INCREMENT'}),\r\n//     decrement: () => dispatch({type: 'DECREMENT'}),\r\n//   }\r\n// }\r\n\r\n\r\nexport default /*connect(mapStateToProps, mapDispatchToProps )(*/Counter/*)*/;\r\n"]},"metadata":{},"sourceType":"module"}