{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\09-HTTP-requests\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState\n/*useReducer , useRef, useEffect, useContext, useImperativeahandle, useMemo,*/\n} from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(film => {\n      return {\n        id: film.episode_id,\n        title: film.title,\n        releaseDate: film.release_date,\n        openingText: film.opening_crawl\n      };\n    });\n    setMovies(transformedMovies);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = App;\nexport default App;\n/* ALTERNATIVE TO ASYNC KEYWORD\nfunction fetchMoviesHandler() {\n    fetch('https://swapi.dev/api/films/')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        });\n        setMovies(transformedMovies);\n      });\n  }\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Dev/React/09-HTTP-requests/src/App.js"],"names":["React","Fragment","useState","MoviesList","App","movies","setMovies","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","film","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA4BC;AAAS;AAArC,OAA2H,OAA3H;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;AAEA,iBAAeK,kBAAf,GAAoC;AAClC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AACnD,aAAO;AACLC,QAAAA,EAAE,EAAED,IAAI,CAACE,UADJ;AAELC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAFP;AAGLC,QAAAA,WAAW,EAAEJ,IAAI,CAACK,YAHb;AAILC,QAAAA,WAAW,EAAEN,IAAI,CAACO;AAJb,OAAP;AAMD,KAPyB,CAA1B;AAQAhB,IAAAA,SAAS,CAACM,iBAAD,CAAT;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEL,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3BQD,G;;KAAAA,G;AA6BT,eAAeA,GAAf;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {  Fragment,  useState /*useReducer , useRef, useEffect, useContext, useImperativeahandle, useMemo,*/,} from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map((film) => {\n      return { \n        id: film.episode_id,\n        title: film.title,\n        releaseDate: film.release_date,\n        openingText: film.opening_crawl \n      };\n    });\n    setMovies(transformedMovies);\n  }\n\n  return (\n    <Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n\n\n\n/* ALTERNATIVE TO ASYNC KEYWORD\nfunction fetchMoviesHandler() {\n    fetch('https://swapi.dev/api/films/')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        });\n        setMovies(transformedMovies);\n      });\n  }\n*/"]},"metadata":{},"sourceType":"module"}