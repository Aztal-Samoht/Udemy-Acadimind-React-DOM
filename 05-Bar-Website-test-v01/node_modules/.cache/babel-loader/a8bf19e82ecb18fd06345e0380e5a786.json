{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\05-Bar-Website-test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, {\n/*useReducer, useRef*/\nFragment, useEffect, useState } from \"react\";\nimport './App.css';\nimport Martini from \"./components/Drinks/Maritni\";\nimport Negroni from \"./components/Drinks/Negroni\";\nimport Drink from \"./components/Drinks/Drink\";\nimport Button from \"./components/UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [selectedDrink, setSelectedDrink] = useState({\n    name: \"NONE\"\n  });\n  const [drinkObj, setDrinkObj] = useState({});\n  useEffect(() => {\n    console.log('current drink: ' + selectedDrink.name);\n  });\n\n  const loadMartini = () => {\n    setSelectedDrink({\n      name: \"MARTINI\"\n    });\n    setDrinkObj({\n      name: \"Martini\",\n      hardware: [\"cocktail glass\", \"mixing glass\", \"strainer\"],\n      software: [\"ice\", \"dry gin(3oz)\", \"dry vermouth(1/2oz)\", \"2-3 dashes bitters\", \"twist of lemon\"],\n      steps: [\"fill mixing glass with ice\", \"add gin and vermouth\", \"stir until chilled\", \"add lemon twist to glass\", \"strain drink into glass\"],\n      person: \"unknown, ratios acording to IBA\",\n      link: \"https://en.wikipedia.org/wiki/Martini_(cocktail)\"\n    });\n  };\n\n  const loadNegroni = () => {\n    setSelectedDrink({\n      name: \"NEGRONI\"\n    });\n    setDrinkObj({\n      name: \"Orange\",\n      hardware: [\"rocks glass\", \"mixing glass\", \"strainer\"],\n      software: [\"ice\", \"dry gin(1oz)\", \"sweet vermouth(1oz)\", \"campari(1oz)\", \"twist of orange\"],\n      steps: [\"fill mixing glass with ice\", \"add gin, campari and vermouth\", \"stir until chilled\", \"add orange twist to glass\", \"strain drink into glass\"],\n      person: \"Fosco Scarselli/Pascal Olivier Count de Negroni, ratios acording to HTD\",\n      link: [\"https://en.wikipedia.org/wiki/Negroni\", \"https://www.youtube.com/watch?v=kbGCnu39YGM&ab_channel=HowToDrink\"]\n    });\n  };\n  /*********************************************\n  ** when I make the CSV file I should make   **\n  ** a row for ingreedients and a row for     **\n  ** quantities and display them with a table **\n  ** so that I can do conversions             **\n  **********************************************/\n\n\n  const clearDrink = () => {\n    setSelectedDrink({\n      name: \"NONE\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: clearDrink,\n      children: \"clear selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: loadMartini,\n      children: \"load martini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: loadNegroni,\n      children: \"load negroni\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), selectedDrink.name != \"NONE\" && /*#__PURE__*/_jsxDEV(Drink, {\n      info: drinkObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5mlm1c8fqMtvMORaq3eXkFVI4I0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Dev/React/05-Bar-Website-test/src/App.js"],"names":["React","Fragment","useEffect","useState","Martini","Negroni","Drink","Button","App","selectedDrink","setSelectedDrink","name","drinkObj","setDrinkObj","console","log","loadMartini","hardware","software","steps","person","link","loadNegroni","clearDrink"],"mappings":";;;AAAA,OAAOA,KAAP;AAAgB;AAAuBC,QAAvC,EAAiDC,SAAjD,EAA4DC,QAA5D,QAA4E,OAA5E;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAlD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAACY,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBN,aAAa,CAACE,IAA9C;AAAoD,GAA7D,CAAT;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACxBN,IAAAA,gBAAgB,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAhB;AACAE,IAAAA,WAAW,CAAC;AACVF,MAAAA,IAAI,EAAE,SADI;AAEVM,MAAAA,QAAQ,EAAE,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,UAAnC,CAFA;AAGVC,MAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,cAAR,EAAwB,qBAAxB,EAA+C,oBAA/C,EAAqE,gBAArE,CAHA;AAIVC,MAAAA,KAAK,EAAE,CAAC,4BAAD,EAA+B,sBAA/B,EAAuD,oBAAvD,EAA6E,0BAA7E,EAAyG,yBAAzG,CAJG;AAKVC,MAAAA,MAAM,EAAE,iCALE;AAMVC,MAAAA,IAAI,EAAE;AANI,KAAD,CAAX;AASD,GAXD;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACxBZ,IAAAA,gBAAgB,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAhB;AACAE,IAAAA,WAAW,CAAC;AACVF,MAAAA,IAAI,EAAE,QADI;AAEVM,MAAAA,QAAQ,EAAE,CAAC,aAAD,EAAgB,cAAhB,EAAgC,UAAhC,CAFA;AAGVC,MAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,cAAR,EAAwB,qBAAxB,EAA+C,cAA/C,EAA+D,iBAA/D,CAHA;AAIVC,MAAAA,KAAK,EAAE,CAAC,4BAAD,EAA+B,+BAA/B,EAAgE,oBAAhE,EAAsF,2BAAtF,EAAmH,yBAAnH,CAJG;AAKVC,MAAAA,MAAM,EAAE,yEALE;AAMVC,MAAAA,IAAI,EAAE,CAAC,uCAAD,EAA0C,mEAA1C;AANI,KAAD,CAAX;AASD,GAXD;AAaF;AACA;AACA;AACA;AACA;AACA;;;AAEE,QAAME,UAAU,GAAG,MAAM;AACvBb,IAAAA,gBAAgB,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAhB;AACD,GAFD;;AAKA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEY,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGb,aAAa,CAACE,IAAd,IAAsB,MAAtB,iBAAgC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,YALnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvDD;;GAAMJ,G;;KAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import React, { /*useReducer, useRef*/ Fragment, useEffect, useState } from \"react\";\n\nimport './App.css';\nimport Martini from \"./components/Drinks/Maritni\"\nimport Negroni from \"./components/Drinks/Negroni\"\nimport Drink from \"./components/Drinks/Drink\"\nimport Button from \"./components/UI/Button\"\n \nconst App = () => {\n\n  const [selectedDrink, setSelectedDrink] = useState({name: \"NONE\"});\n  const [drinkObj, setDrinkObj] = useState({});\n  \n  useEffect( () => {console.log('current drink: ' + selectedDrink.name)}, );\n \n  const loadMartini = () => {\n    setSelectedDrink({name: \"MARTINI\"});\n    setDrinkObj({\n      name: \"Martini\",\n      hardware: [\"cocktail glass\", \"mixing glass\", \"strainer\"],\n      software: [\"ice\", \"dry gin(3oz)\", \"dry vermouth(1/2oz)\", \"2-3 dashes bitters\", \"twist of lemon\"],\n      steps: [\"fill mixing glass with ice\", \"add gin and vermouth\", \"stir until chilled\", \"add lemon twist to glass\", \"strain drink into glass\"],\n      person: \"unknown, ratios acording to IBA\",\n      link: \"https://en.wikipedia.org/wiki/Martini_(cocktail)\"\n      \n    })\n  }\n\n  const loadNegroni = () => {\n    setSelectedDrink({name: \"NEGRONI\"});\n    setDrinkObj({\n      name: \"Orange\",\n      hardware: [\"rocks glass\", \"mixing glass\", \"strainer\"],\n      software: [\"ice\", \"dry gin(1oz)\", \"sweet vermouth(1oz)\", \"campari(1oz)\", \"twist of orange\"],\n      steps: [\"fill mixing glass with ice\", \"add gin, campari and vermouth\", \"stir until chilled\", \"add orange twist to glass\", \"strain drink into glass\"],\n      person: \"Fosco Scarselli/Pascal Olivier Count de Negroni, ratios acording to HTD\",\n      link: [\"https://en.wikipedia.org/wiki/Negroni\", \"https://www.youtube.com/watch?v=kbGCnu39YGM&ab_channel=HowToDrink\"]\n      \n    })\n  }\n\n/*********************************************\n** when I make the CSV file I should make   **\n** a row for ingreedients and a row for     **\n** quantities and display them with a table **\n** so that I can do conversions             **\n**********************************************/\n\n  const clearDrink = () => {\n    setSelectedDrink({name: \"NONE\"});\n  }\n\n\n  return (\n    <Fragment>\n      <Button onClick={clearDrink}>clear selection</Button>\n      <Button onClick={loadMartini}>load martini</Button>\n      <Button onClick={loadNegroni}>load negroni</Button>\n      \n      {selectedDrink.name != \"NONE\" && <Drink info={drinkObj}/>}\n\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}