{"ast":null,"code":"async function useFetch() {\n  let verb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"GET\";\n  let task = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    //fetch tasks\n    const response = await fetch(\"https://react-http-c0588-default-rtdb.firebaseio.com/tasks.json\"); //check status\n\n    if (response.status !== 200) {\n      throw new Error(\"failed to GET tasks\");\n    }\n\n    const data = await response.json();\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    return {\n      tasks: loadedTasks,\n      error: null\n    };\n  } catch (err) {\n    return {\n      tasks: task,\n      error: err\n    };\n  }\n}\n\nexport default useFetch; // ,\n// (verb === \"GET\" ? {} : { method: 'POST', body: JSON.stringify(task), headers: {'Content-Type': 'application/json' }})\n// );","map":{"version":3,"sources":["D:/Dev/React/11-Custom-Hooks-II/src/hooks/useFetch.js"],"names":["useFetch","verb","task","response","fetch","status","Error","data","json","loadedTasks","taskKey","push","id","text","tasks","error","err"],"mappings":"AAAA,eAAeA,QAAf,GAAiD;AAAA,MAAzBC,IAAyB,uEAAlB,KAAkB;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AAC/C,MAAI;AAGF;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAF,CAA5B,CAJE,CAKF;;AACA,QAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACD,UAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AAC1BE,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEN,IAAI,CAACG,OAAD,CAAJ,CAAcG;AAAnC,OAAjB;AACD;;AAED,WAAO;AACLC,MAAAA,KAAK,EAAEL,WADF;AAELM,MAAAA,KAAK,EAAE;AAFF,KAAP;AAKD,GAtBD,CAsBE,OAAOC,GAAP,EAAY;AACZ,WAAO;AACLF,MAAAA,KAAK,EAAEZ,IADF;AAELa,MAAAA,KAAK,EAAEC;AAFF,KAAP;AAID;AACF;;AAED,eAAehB,QAAf,C,CAEA;AACA;AACA","sourcesContent":["async function useFetch(verb = \"GET\", task = {}) {\r\n  try {\r\n    \r\n    \r\n    //fetch tasks\r\n    const response = await fetch( \"https://react-http-c0588-default-rtdb.firebaseio.com/tasks.json\" );\r\n    //check status\r\n    if (response.status !== 200) {\r\n      throw new Error(\"failed to GET tasks\");\r\n    }\r\n    const data = await response.json();\r\n\r\n    const loadedTasks = [];\r\n\r\n    for (const taskKey in data) {\r\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n    }\r\n\r\n    return {\r\n      tasks: loadedTasks,\r\n      error: null  \r\n    }\r\n\r\n  } catch (err) {\r\n    return {\r\n      tasks: task,\r\n      error: err\r\n    }\r\n  }\r\n}\r\n\r\nexport default useFetch;\r\n\r\n// ,\r\n// (verb === \"GET\" ? {} : { method: 'POST', body: JSON.stringify(task), headers: {'Content-Type': 'application/json' }})\r\n// );\r\n"]},"metadata":{},"sourceType":"module"}