{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\04-section 10\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    }); // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    }); // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLURED\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"email\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"TL5IUdBU7Hd3t/ctuoo+WdWP6xE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Dev/React/04-section 10/src/components/Login/Login.js"],"names":["React","useContext","useRef","useState","useEffect","useReducer","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","isValid","includes","passwordReducer","trim","length","Login","props","authCtx","emailInputRef","passwordInputRef","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","validateEmailHandler","passwordChangeHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"./Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.value, isValid: action.value.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.value, isValid: action.value.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", value: event.target.value });\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", value: event.target.value });\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLURED\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    }else if (!emailIsValid){\n      emailInputRef.current.focus();\n    }else{\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"email\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}