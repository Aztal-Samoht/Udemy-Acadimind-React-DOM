{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\06-food-order-code-along\\\\src\\\\components\\\\Meals\\\\AddMeal\\\\AddMeal.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../../UI/Card/Card\";\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"../AvailableMeals/AvailableMeals.module.css\";\nimport buttonClasses from '../../UI/Button/Button.module.css';\nimport MealInput from \"./MealInput\";\nimport useValidate from '../../../hooks/useValidate';\nimport useHTTP from \"../../../hooks/useHTTP\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMeal = props => {\n  _s();\n\n  const request = useHTTP();\n  const {\n    inputState: nameState,\n    onChange: onNameChange,\n    onBlur: onNameBlur,\n    reset: resetName\n  } = useValidate(x => x.trim() !== ''); // console.log('nameState.value: ' + nameState.value + '\\nnameState.isValid: ' + nameState.isValid + '\\nnameState.hasError: ' + nameState.hasError)\n\n  const nameClassString = nameState.hasError ? 'form-control invalid' : 'form-control'; // console.log('nameClassString: ' +  nameClassString )\n\n  const {\n    inputState: descriptionState,\n    onChange: onDescriptionChange,\n    onBlur: onDescriptionBlur,\n    reset: resetDescription\n  } = useValidate(x => x.trim() !== '');\n  const descriptionClassString = descriptionState.hasError ? 'form-control invalid' : 'form-control';\n  const {\n    inputState: priceState,\n    onChange: onPriceChange,\n    onBlur: onPriceBlur,\n    reset: resetPrice\n  } = useValidate(x => x.includes('.'));\n  const priceClassString = priceState.hasError ? 'form-control invalid' : 'form-control';\n  let formIsValid = nameState.isValid && descriptionState.isValid && priceState.isValid;\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    request.sendMeal({\n      id: Math.random(),\n      name: nameState.value,\n      descrtion: descriptionState.value,\n      price: priceState.value\n    }); //resetName(),\n    // resetDescription(),\n    // resetPrice(),\n\n    props.toggleForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.meals,\n    children: [!props.show && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.toggleForm,\n      children: \"add a meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), props.show && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add a Meal!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MealInput, {\n          className: nameClassString,\n          onChange: onNameChange,\n          onBlur: onNameBlur,\n          type: \"text\",\n          name: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MealInput, {\n          className: descriptionClassString,\n          onChange: onDescriptionChange,\n          onBlur: onDescriptionBlur,\n          type: \"text\",\n          name: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MealInput, {\n          className: priceClassString,\n          onChange: onPriceChange,\n          onBlur: onPriceBlur,\n          type: \"number\",\n          name: \"Price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !formIsValid,\n            className: buttonClasses.button,\n            children: \" submit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.toggleForm,\n        className: buttonClasses.button,\n        children: \" cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMeal, \"dVxvIKywebhZZiEq2iT1qlbDSHU=\", false, function () {\n  return [useHTTP, useValidate, useValidate, useValidate];\n});\n\n_c = AddMeal;\nexport default AddMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMeal\");","map":{"version":3,"sources":["D:/Dev/React/06-food-order-code-along/src/components/Meals/AddMeal/AddMeal.js"],"names":["Card","Button","classes","buttonClasses","MealInput","useValidate","useHTTP","Fragment","AddMeal","props","request","inputState","nameState","onChange","onNameChange","onBlur","onNameBlur","reset","resetName","x","trim","nameClassString","hasError","descriptionState","onDescriptionChange","onDescriptionBlur","resetDescription","descriptionClassString","priceState","onPriceChange","onPriceBlur","resetPrice","includes","priceClassString","formIsValid","isValid","onSubmitHandler","event","preventDefault","sendMeal","id","Math","random","name","value","descrtion","price","toggleForm","meals","show","button"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGJ,OAAO,EAAvB;AACA,QAAM;AACJK,IAAAA,UAAU,EAAEC,SADR;AAEJC,IAAAA,QAAQ,EAAEC,YAFN;AAGJC,IAAAA,MAAM,EAAEC,UAHJ;AAIJC,IAAAA,KAAK,EAAEC;AAJH,MAKFb,WAAW,CAACc,CAAC,IAAIA,CAAC,CAACC,IAAF,OAAa,EAAnB,CALf,CAFyB,CASzB;;AACA,QAAMC,eAAe,GAAGT,SAAS,CAACU,QAAV,GAAqB,sBAArB,GAA8C,cAAtE,CAVyB,CAWzB;;AAEA,QAAM;AACJX,IAAAA,UAAU,EAAEY,gBADR;AAEJV,IAAAA,QAAQ,EAAEW,mBAFN;AAGJT,IAAAA,MAAM,EAAEU,iBAHJ;AAIJR,IAAAA,KAAK,EAAES;AAJH,MAKFrB,WAAW,CAACc,CAAC,IAAIA,CAAC,CAACC,IAAF,OAAa,EAAnB,CALf;AAOA,QAAMO,sBAAsB,GAAGJ,gBAAgB,CAACD,QAAjB,GAA4B,sBAA5B,GAAqD,cAApF;AAEA,QAAM;AACJX,IAAAA,UAAU,EAAEiB,UADR;AAEJf,IAAAA,QAAQ,EAAEgB,aAFN;AAGJd,IAAAA,MAAM,EAAEe,WAHJ;AAIJb,IAAAA,KAAK,EAAEc;AAJH,MAKF1B,WAAW,CAACc,CAAC,IAAIA,CAAC,CAACa,QAAF,CAAW,GAAX,CAAN,CALf;AAOA,QAAMC,gBAAgB,GAAGL,UAAU,CAACN,QAAX,GAAsB,sBAAtB,GAA+C,cAAxE;AAGA,MAAIY,WAAW,GAAGtB,SAAS,CAACuB,OAAV,IAAqBZ,gBAAgB,CAACY,OAAtC,IAAiDP,UAAU,CAACO,OAA9E;;AAGA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA5B,IAAAA,OAAO,CAAC6B,QAAR,CAAiB;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADW;AAEfC,MAAAA,IAAI,EAAE/B,SAAS,CAACgC,KAFD;AAGfC,MAAAA,SAAS,EAAEtB,gBAAgB,CAACqB,KAHb;AAIfE,MAAAA,KAAK,EAAElB,UAAU,CAACgB;AAJH,KAAjB,EAFiC,CAQjC;AACA;AACA;;AACAnC,IAAAA,KAAK,CAACsC,UAAN;AACD,GAZD;;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAE7C,OAAO,CAAC8C,KAAzB;AAAA,eACG,CAACvC,KAAK,CAACwC,IAAP,iBAAe,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAExC,KAAK,CAACsC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEGtC,KAAK,CAACwC,IAAN,iBACC,QAAC,QAAD;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEb,eAAhB;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEf,eAAtB;AAAuC,UAAA,QAAQ,EAAEP,YAAjD;AAA+D,UAAA,MAAM,EAAEE,UAAvE;AAAmF,UAAA,IAAI,EAAC,MAAxF;AAA+F,UAAA,IAAI,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEW,sBAAtB;AAA8C,UAAA,QAAQ,EAAEH,mBAAxD;AAA6E,UAAA,MAAM,EAAEC,iBAArF;AAAwG,UAAA,IAAI,EAAC,MAA7G;AAAoH,UAAA,IAAI,EAAC;AAAzH;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEQ,gBAAtB;AAAwC,UAAA,QAAQ,EAAEJ,aAAlD;AAAiE,UAAA,MAAM,EAAEC,WAAzE;AAAsF,UAAA,IAAI,EAAC,QAA3F;AAAoG,UAAA,IAAI,EAAC;AAAzG;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAA,iCACA;AAAQ,YAAA,QAAQ,EAAE,CAACI,WAAnB;AAAgC,YAAA,SAAS,EAAE/B,aAAa,CAAC+C,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUA;AAAQ,QAAA,OAAO,EAAEzC,KAAK,CAACsC,UAAvB;AAAmC,QAAA,SAAS,EAAE5C,aAAa,CAAC+C,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApED;;GAAM1C,O;UACYF,O,EAMZD,W,EAWAA,W,EASAA,W;;;KA3BAG,O;AAqEN,eAAeA,OAAf","sourcesContent":["import Card from \"../../UI/Card/Card\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"../AvailableMeals/AvailableMeals.module.css\";\r\nimport buttonClasses from '../../UI/Button/Button.module.css'\r\nimport MealInput from \"./MealInput\";\r\nimport useValidate from '../../../hooks/useValidate'\r\nimport useHTTP from \"../../../hooks/useHTTP\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst AddMeal = (props) => {\r\n  const request = useHTTP();\r\n  const {\r\n    inputState: nameState,\r\n    onChange: onNameChange,\r\n    onBlur: onNameBlur,\r\n    reset: resetName,\r\n  } = useValidate(x => x.trim() !== '')\r\n\r\n  // console.log('nameState.value: ' + nameState.value + '\\nnameState.isValid: ' + nameState.isValid + '\\nnameState.hasError: ' + nameState.hasError)\r\n  const nameClassString = nameState.hasError ? 'form-control invalid' : 'form-control'\r\n  // console.log('nameClassString: ' +  nameClassString )\r\n  \r\n  const {\r\n    inputState: descriptionState,\r\n    onChange: onDescriptionChange,\r\n    onBlur: onDescriptionBlur,\r\n    reset: resetDescription,\r\n  } = useValidate(x => x.trim() !== '')\r\n\r\n  const descriptionClassString = descriptionState.hasError ? 'form-control invalid' : 'form-control'\r\n  \r\n  const {\r\n    inputState: priceState,\r\n    onChange: onPriceChange,\r\n    onBlur: onPriceBlur,\r\n    reset: resetPrice,\r\n  } = useValidate(x => x.includes('.'))\r\n\r\n  const priceClassString = priceState.hasError ? 'form-control invalid' : 'form-control'\r\n\r\n\r\n  let formIsValid = nameState.isValid && descriptionState.isValid && priceState.isValid\r\n\r\n  \r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    request.sendMeal({\r\n      id: Math.random(),\r\n      name: nameState.value,\r\n      descrtion: descriptionState.value,\r\n      price: priceState.value\r\n    });\r\n    //resetName(),\r\n    // resetDescription(),\r\n    // resetPrice(),\r\n    props.toggleForm();\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.meals}>\r\n      {!props.show && <Button onClick={props.toggleForm}>add a meal</Button>}\r\n      {props.show && (\r\n        <Fragment>\r\n          <form onSubmit={onSubmitHandler}>\r\n          <h1>Add a Meal!</h1>\r\n          <MealInput className={nameClassString} onChange={onNameChange} onBlur={onNameBlur} type='text' name='Name '/>\r\n          <MealInput className={descriptionClassString} onChange={onDescriptionChange} onBlur={onDescriptionBlur} type='text' name='Description: '/>\r\n          <MealInput className={priceClassString} onChange={onPriceChange} onBlur={onPriceBlur} type='number' name='Price: '/>\r\n          <div>\r\n          <button disabled={!formIsValid} className={buttonClasses.button}> submit </button>\r\n          </div>\r\n        </form>\r\n        <button onClick={props.toggleForm} className={buttonClasses.button}> cancel </button>\r\n      </Fragment>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default AddMeal;\r\n"]},"metadata":{},"sourceType":"module"}