{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\06-food-order-code-along\\\\src\\\\components\\\\Meals\\\\AddMeal\\\\AddMeal.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../../UI/Card/Card\";\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"../AvailableMeals/AvailableMeals.module.css\";\nimport buttonClasses from '../../UI/Button/Button.module.css';\nimport MealInput from \"./MealInput\";\nimport useValidate from '../../../hooks/useValidate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMeal = props => {\n  _s();\n\n  const {\n    inputState: nameState,\n    onChange: onNameChange,\n    onBlur: onNameBlur\n  } = useValidate(x => x.trim() !== '');\n  console.log(nameState.hasError);\n  const nameClassString = nameState.hasError ? 'form-control invalid' : 'form-control';\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    props.toggleForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.meals,\n    children: [!props.show && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.toggleForm,\n      children: \"add a meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this), props.show && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a Meal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MealInput, {\n        className: nameClassString,\n        onChange: onNameChange,\n        onBlur: onNameBlur,\n        type: \"text\",\n        name: \"Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MealInput, {\n        type: \"text\",\n        name: \"Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MealInput, {\n        type: \"number\",\n        name: \"price \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: buttonClasses.button,\n          children: \" submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMeal, \"QrhM+oawIF3qlExnAu1R/1pwTJI=\", false, function () {\n  return [useValidate];\n});\n\n_c = AddMeal;\nexport default AddMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMeal\");","map":{"version":3,"sources":["D:/Dev/React/06-food-order-code-along/src/components/Meals/AddMeal/AddMeal.js"],"names":["Card","Button","classes","buttonClasses","MealInput","useValidate","AddMeal","props","inputState","nameState","onChange","onNameChange","onBlur","onNameBlur","x","trim","console","log","hasError","nameClassString","onSubmitHandler","event","preventDefault","toggleForm","meals","show","button"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AACJC,IAAAA,UAAU,EAAEC,SADR;AAEJC,IAAAA,QAAQ,EAAEC,YAFN;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFR,WAAW,CAACS,CAAC,IAAIA,CAAC,CAACC,IAAF,OAAa,EAAnB,CAJf;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACS,QAAtB;AACA,QAAMC,eAAe,GAAGV,SAAS,CAACS,QAAV,GAAqB,sBAArB,GAA8C,cAAtE;;AAMA,QAAME,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAf,IAAAA,KAAK,CAACgB,UAAN;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAErB,OAAO,CAACsB,KAAzB;AAAA,eACG,CAACjB,KAAK,CAACkB,IAAP,iBAAe,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAElB,KAAK,CAACgB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEGhB,KAAK,CAACkB,IAAN,iBACC;AAAM,MAAA,QAAQ,EAAEL,eAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAED,eAAtB;AAAuC,QAAA,QAAQ,EAAER,YAAjD;AAA+D,QAAA,MAAM,EAAEE,UAAvE;AAAmF,QAAA,IAAI,EAAC,MAAxF;AAA+F,QAAA,IAAI,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAEV,aAAa,CAACuB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnCD;;GAAMpB,O;UAKAD,W;;;KALAC,O;AAoCN,eAAeA,OAAf","sourcesContent":["import Card from \"../../UI/Card/Card\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"../AvailableMeals/AvailableMeals.module.css\";\r\nimport buttonClasses from '../../UI/Button/Button.module.css'\r\nimport MealInput from \"./MealInput\";\r\nimport useValidate from '../../../hooks/useValidate'\r\n\r\nconst AddMeal = (props) => {\r\n  const {\r\n    inputState: nameState,\r\n    onChange: onNameChange,\r\n    onBlur: onNameBlur,\r\n  } = useValidate(x => x.trim() !== '')\r\n\r\n  console.log(nameState.hasError)\r\n  const nameClassString = nameState.hasError ? 'form-control invalid' : 'form-control'\r\n\r\n\r\n\r\n\r\n  \r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.toggleForm();\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.meals}>\r\n      {!props.show && <Button onClick={props.toggleForm}>add a meal</Button>}\r\n      {props.show && (\r\n        <form onSubmit={onSubmitHandler}>\r\n          <h1>Add a Meal!</h1>\r\n          <MealInput className={nameClassString} onChange={onNameChange} onBlur={onNameBlur} type='text' name='Name '/>\r\n          <MealInput type='text' name='Description '/>\r\n          <MealInput type='number' name='price '/>\r\n          <div>\r\n            <button className={buttonClasses.button}> submit </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default AddMeal;\r\n"]},"metadata":{},"sourceType":"module"}