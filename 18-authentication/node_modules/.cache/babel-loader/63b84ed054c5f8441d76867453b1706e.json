{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React_DOM\\\\18-authentication\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredcEmail = emailInputRef.current.value;\n    const enteredcPassword = passwordInputRef.current.value; //TODO: add validation\n\n    if (isLogin) {} else {\n      fetch();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["D:/Dev/React_DOM/18-authentication/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredcEmail","current","value","enteredcPassword","fetch","auth","control","actions","toggle"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,aAAa,GAAGH,MAAM,EAA5B;AACA,QAAMI,gBAAgB,GAAGJ,MAAM,EAA/B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMQ,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,UAAU,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGT,aAAa,CAACU,OAAd,CAAsBC,KAA5C;AACA,UAAMC,gBAAgB,GAAGX,gBAAgB,CAACS,OAAjB,CAAyBC,KAAlD,CAJ+B,CAK/B;;AACA,QAAIT,OAAJ,EAAa,CAEZ,CAFD,MAEM;AACFW,MAAAA,KAAK;AACR;AACF,GAXD;;AAaA,sBACE;AAAS,IAAA,SAAS,EAAEf,OAAO,CAACgB,IAA5B;AAAA,4BACE;AAAA,gBAAKZ,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACiB,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,MAAvC;AAAwC,UAAA,GAAG,EAAEf;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACiB,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,GAAG,EAAEd;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACkB,OAAxB;AAAA,gCACE;AAAA,oBAASd,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEJ,OAAO,CAACmB,MAFrB;AAGE,UAAA,OAAO,EAAEb,qBAHX;AAAA,oBAKGF,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CApDD;;GAAMH,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nimport classes from \"./AuthForm.module.css\";\r\n\r\nconst AuthForm = () => {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredcEmail = emailInputRef.current.value;\r\n    const enteredcPassword = passwordInputRef.current.value;\r\n    //TODO: add validation\r\n    if (isLogin) {\r\n\r\n    }else {\r\n        fetch()\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            required\r\n            ref={passwordInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}