{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\12-working-with-forms-and-input\\\\src\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useValidate from \"../hooks/useValidate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    inputState: firstState,\n    onChange: onFirstChange,\n    onBlur: onFirstBlur,\n    reset: resetFirst\n  } = useValidate(x => x.trim() !== '');\n  const firstClassString = firstState.hasError ? 'form-control invalid' : 'form-control';\n  const {\n    inputState: lastState,\n    onChange: onLastChange,\n    onBlur: onLastBlur,\n    reset: resetLast\n  } = useValidate(x => x.trim() !== '');\n  const lastClassString = lastState.hasError ? 'form-control invalid' : 'form-control';\n  let formIsValid = firstState.isValid && lastState.isValid; //TODO: add other inputs\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstClassString,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onFirstChange,\n          onBlur: onFirstBlur,\n          value: firstState.value,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastClassString,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onLastChange,\n          onBlur: onLastBlur,\n          value: lastState.value,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"vlV8251sLmdceaJdd1ZVSTvLuqA=\", false, function () {\n  return [useValidate, useValidate];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["D:/Dev/React/12-working-with-forms-and-input/src/src/components/BasicForm.js"],"names":["useValidate","BasicForm","props","inputState","firstState","onChange","onFirstChange","onBlur","onFirstBlur","reset","resetFirst","x","trim","firstClassString","hasError","lastState","onLastChange","onLastBlur","resetLast","lastClassString","formIsValid","isValid","value"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,sBAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACJC,IAAAA,UAAU,EAAEC,UADR;AAEJC,IAAAA,QAAQ,EAAEC,aAFN;AAGJC,IAAAA,MAAM,EAAEC,WAHJ;AAIJC,IAAAA,KAAK,EAAEC;AAJH,MAKFV,WAAW,CAACW,CAAC,IAAIA,CAAC,CAACC,IAAF,OAAa,EAAnB,CALf;AAOA,QAAMC,gBAAgB,GAAGT,UAAU,CAACU,QAAX,GAAsB,sBAAtB,GAA+C,cAAxE;AAEA,QAAM;AACJX,IAAAA,UAAU,EAAEY,SADR;AAEJV,IAAAA,QAAQ,EAAEW,YAFN;AAGJT,IAAAA,MAAM,EAAEU,UAHJ;AAIJR,IAAAA,KAAK,EAAES;AAJH,MAKFlB,WAAW,CAACW,CAAC,IAAIA,CAAC,CAACC,IAAF,OAAa,EAAnB,CALf;AAOA,QAAMO,eAAe,GAAGJ,SAAS,CAACD,QAAV,GAAqB,sBAArB,GAA8C,cAAtE;AAEA,MAAIM,WAAW,GAAGhB,UAAU,CAACiB,OAAX,IAAsBN,SAAS,CAACM,OAAlD,CAnB2B,CAmB8B;;AAEzD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAER,gBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,QAAQ,EAAEP,aAAjB;AAAgC,UAAA,MAAM,EAAEE,WAAxC;AAAqD,UAAA,KAAK,EAAEJ,UAAU,CAACkB,KAAvE;AAA8E,UAAA,IAAI,EAAC,MAAnF;AAA0F,UAAA,EAAE,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEH,eAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,QAAQ,EAAEH,YAAjB;AAA+B,UAAA,MAAM,EAAEC,UAAvC;AAAmD,UAAA,KAAK,EAAEF,SAAS,CAACO,KAApE;AAA2E,UAAA,IAAI,EAAC,MAAhF;AAAuF,UAAA,EAAE,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACF,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1CD;;GAAMnB,S;UAMAD,W,EASAA,W;;;KAfAC,S;AA4CN,eAAeA,SAAf","sourcesContent":["import useValidate from \"../hooks/useValidate\";\r\n\r\nconst BasicForm = (props) => {\r\n  const {\r\n    inputState: firstState,\r\n    onChange: onFirstChange,\r\n    onBlur: onFirstBlur,\r\n    reset: resetFirst\r\n  } = useValidate(x => x.trim() !== '')\r\n\r\n  const firstClassString = firstState.hasError ? 'form-control invalid' : 'form-control'\r\n  \r\n  const {\r\n    inputState: lastState,\r\n    onChange: onLastChange,\r\n    onBlur: onLastBlur,\r\n    reset: resetLast\r\n  } = useValidate(x => x.trim() !== '')\r\n\r\n  const lastClassString = lastState.hasError ? 'form-control invalid' : 'form-control'\r\n  \r\n  let formIsValid = firstState.isValid && lastState.isValid//TODO: add other inputs\r\n  \r\n  return (\r\n    <form>\r\n      <div className='control-group'>\r\n        <div className={firstClassString}>\r\n          <label htmlFor='name'>First Name</label>\r\n          <input onChange={onFirstChange} onBlur={onFirstBlur} value={firstState.value} type='text' id='name' />\r\n        </div>\r\n        <div className={lastClassString}>\r\n          <label htmlFor='name'>Last Name</label>\r\n          <input onChange={onLastChange} onBlur={onLastBlur} value={lastState.value} type='text' id='name' />\r\n        </div>\r\n      </div>\r\n      <div className='form-control'>\r\n        <label htmlFor='name'>E-Mail Address</label>\r\n        <input type='text' id='name' />\r\n      </div>\r\n      <div className='form-actions'>\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n"]},"metadata":{},"sourceType":"module"}