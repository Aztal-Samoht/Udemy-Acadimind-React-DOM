{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\12-working-with-forms-and-input\\\\src\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.contains('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName); // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"eamil\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/Dev/React/12-working-with-forms-and-input/src/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","contains","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\nconst SimpleInput = (props) => {\r\n  const [enteredName, setEnteredName] = useState('');\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n  const [enteredEmail, setEnteredEmail] = useState('');\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const enteredNameIsValid = enteredName.trim() !== '';\r\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.contains('@');\r\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  let formIsValid = false;\r\n\r\n  if (enteredNameIsValid && enteredEmailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n  };\r\n\r\n  const nameInputBlurHandler = (event) => {\r\n    setEnteredNameTouched(true);\r\n  };\r\n  const emailInputBlurHandler = (event) => {\r\n    setEnteredEmailTouched(true);\r\n  };\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\r\n      return;\r\n    }\r\n\r\n    console.log(enteredName);\r\n\r\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\r\n    setEnteredName('');\r\n    setEnteredNameTouched(false);\r\n\r\n    setEnteredEmail('');\r\n    setEnteredEmailTouched(false);\r\n  };\r\n\r\n  const nameInputClasses = nameInputIsInvalid\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n  const emailInputClasses = emailInputIsInvalid\r\n    ? 'form-control invalid'\r\n    : 'form-control';\r\n\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          onChange={nameInputChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n        {nameInputIsInvalid && (\r\n          <p className='error-text'>Name must not be empty.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor='email'>Your Email</label>\r\n        <input\r\n          type='eamil'\r\n          id='email'\r\n          onChange={emailInputChangeHandler}\r\n          onBlur={emailInputBlurHandler}\r\n          value={enteredEmail}\r\n        />\r\n        {emailInputIsInvalid && (\r\n          <p className='error-text'>email must not be empty.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className='form-actions'>\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"]},"metadata":{},"sourceType":"module"}