{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thatG\\\\Documents\\\\Udemy\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseArray.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseArray(props) {\n  _s();\n\n  const [expenseYear, setExpenseYear] = useState(\"2020\");\n\n  function yearSelectHandler(newValue) {\n    setExpenseYear(newValue);\n    console.log(\"expenseArray passing the State: \" + expenseYear.toString());\n  }\n\n  const filteredExpenses = props.args.filter(expense => {\n    return expense.date.getFullYear().toString() === expenseYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: expenseYear,\n      onYearSelect: yearSelectHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"expense-item\",\n      children: \"No Expenses Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 42\n    }, this), filteredExpenses.length === 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseArray, \"arqoPks+9m4nb6ZDVdtEoNRvubw=\");\n\n_c = ExpenseArray;\nexport default ExpenseArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseArray\");","map":{"version":3,"sources":["C:/Users/thatG/Documents/Udemy/React/01-starting-setup/src/components/Expenses/ExpenseArray.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","ExpenseArray","props","expenseYear","setExpenseYear","yearSelectHandler","newValue","console","log","toString","filteredExpenses","args","filter","expense","date","getFullYear","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAO,mBAAP;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,MAAD,CAA9C;;AAEA,WAASQ,iBAAT,CAA2BC,QAA3B,EAAqC;AACnCF,IAAAA,cAAc,CAACE,QAAD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCL,WAAW,CAACM,QAAZ,EAAjD;AACD;;AAED,QAAMC,gBAAgB,GAAGR,KAAK,CAACS,IAAN,CAAWC,MAAX,CAAmBC,OAAD,IAAa;AACtD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BN,QAA3B,OAA0CN,WAAjD;AACD,GAFwB,CAAzB;AAIA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEA,WAA1B;AAAuC,MAAA,YAAY,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,gBAAgB,CAACM,MAAjB,KAA6B,CAA7B,iBAAkC;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFrC,EAGGN,gBAAgB,CAACM,MAAjB,KAA6B,CAA7B,IAAkCN,gBAAgB,CAACO,GAAjB,CAAsBJ,OAAD,iBAClD,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACK,KAFjB;AAGE,MAAA,MAAM,EAAEL,OAAO,CAACM,MAHlB;AAIE,MAAA,IAAI,EAAEN,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACO,EADf;AAAA;AAAA;AAAA;AAAA,YAD6B,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3BQnB,Y;;KAAAA,Y;AA6BT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseArray(props) {\r\n  const [expenseYear, setExpenseYear] = useState(\"2020\");\r\n\r\n  function yearSelectHandler(newValue) {\r\n    setExpenseYear(newValue);\r\n    console.log(\"expenseArray passing the State: \" + expenseYear.toString());\r\n  }\r\n\r\n  const filteredExpenses = props.args.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === expenseYear\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ExpensesFilter selected={expenseYear} onYearSelect={yearSelectHandler} />\r\n      {filteredExpenses.length ===  0 && <p className='expense-item'>No Expenses Found</p>} \r\n      {filteredExpenses.length ===  0 && filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseArray;\r\n"]},"metadata":{},"sourceType":"module"}