{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\03-char-sheet\\\\src\\\\components\\\\StatArray\\\\StatRow.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StatRow(props) {\n  function calcMod(score) {\n    if (score > 10) {\n      return Math.ceil((score - 11) / 2);\n    }\n\n    return Math.floor((score - 10) / 2);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: props.stat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: props.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: calcMod(props.score)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = StatRow;\nexport default StatRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatRow\");","map":{"version":3,"sources":["D:/Dev/React/03-char-sheet/src/components/StatArray/StatRow.js"],"names":["StatRow","props","calcMod","score","Math","ceil","floor","stat"],"mappings":";;;AAAA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAOC,IAAI,CAACC,IAAL,CAAU,CAACF,KAAK,GAAG,EAAT,IAAe,CAAzB,CAAP;AACD;;AACD,WAAOC,IAAI,CAACE,KAAL,CAAW,CAACH,KAAK,GAAG,EAAT,IAAe,CAA1B,CAAP;AACD;;AACD,sBACE;AAAA,4BACE;AAAA,gBAAKF,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKN,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKD,OAAO,CAACD,KAAK,CAACE,KAAP;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAdQH,O;AAeT,eAAeA,OAAf","sourcesContent":["function StatRow(props) {\r\n  function calcMod(score) {\r\n    if (score > 10) {\r\n      return Math.ceil((score - 11) / 2);\r\n    }\r\n    return Math.floor((score - 10) / 2);\r\n  }\r\n  return (\r\n    <table>\r\n      <tr>{props.stat}</tr>\r\n      <tr>{props.score}</tr>\r\n      <tr>{calcMod(props.score)}</tr>\r\n    </table>\r\n  );\r\n}\r\nexport default StatRow;\r\n"]},"metadata":{},"sourceType":"module"}