{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\03-example-user-list-code-along\\\\src\\\\components\\\\Users\\\\AddUser3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser3 = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const getInputs = () => {\n    console.log('values of input refs: ' + nameInputRef.current.value + ', ' + ageInputRef.current.value);\n    return {\n      name: nameInputRef.current.value,\n      age: ageInputRef.current.value\n    };\n  };\n\n  const saveAndReset = x => {\n    props.onAddUser(input.name, input.age);\n    nameInputRef.current.value = '';\n    ageInputRef.current.value = '';\n    console.log('name value after reset: ' + nameInputRef.current.value + 'age value after reset: ' + ageInputRef.current.value);\n    setInput({\n      name: nameInputRef.current.value,\n      age: ageInputRef.current.value\n    });\n  };\n\n  const checkValidity = input => {\n    // console.log(input.name);\n    if (input.name.trim().length === 0) {\n      setError({\n        title: \"no name found\",\n        message: \"please enter a name\"\n      });\n      return;\n    }\n\n    if (input.age.trim().length === 0) {\n      setError({\n        title: \"no age found\",\n        message: \"please enter an age\"\n      });\n      return;\n    }\n\n    if (+input.age < 1) {\n      setError({\n        title: \"invalid age entered\",\n        message: \"please enter a positive int\"\n      });\n      return;\n    }\n\n    setError(null);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const input = getInputs();\n\n    if (currentName.trim().length === 0 || currentAge.trim().length === 0 || +currentAge < 1) {\n      setError({\n        title: \"invalid input\",\n        message: \"please enter a name and a positive int\"\n      });\n      return;\n    }\n\n    console.log(\"added: \" + currentName + \", who is \" + currentAge);\n    props.onAddUser(currentName, currentAge);\n    nameInputRef.current.value = '';\n    nameInputRef.current.value = '';\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      reset: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age [years(integer)]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User (using factoring)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser3, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser3;\nexport default AddUser3;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser3\");","map":{"version":3,"sources":["D:/Dev/React/03-example-user-list-code-along/src/components/Users/AddUser3.js"],"names":["React","useState","useRef","Card","classes","Button","ErrorModal","Wrapper","AddUser3","props","nameInputRef","ageInputRef","error","setError","getInputs","console","log","current","value","name","age","saveAndReset","x","onAddUser","input","setInput","checkValidity","trim","length","title","message","addUserHandler","event","preventDefault","currentName","currentAge","errorHandler"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport Wrapper from \"../Helpers/Wrapper\"\r\n\r\nconst AddUser3 = (props) =>{\r\n\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n\r\n  const [error, setError] = useState();\r\n\r\n  const getInputs = () => {\r\n    console.log('values of input refs: '+ nameInputRef.current.value + ', ' + ageInputRef.current.value);      \r\n    return {\r\n      name: nameInputRef.current.value, \r\n      age: ageInputRef.current.value\r\n    };\r\n  }\r\n\r\n  const saveAndReset = x => {\r\n    props.onAddUser(input.name, input.age);\r\n    nameInputRef.current.value = '';\r\n    ageInputRef.current.value = '';\r\n    console.log('name value after reset: '+ nameInputRef.current.value + 'age value after reset: '+ ageInputRef.current.value);\r\n    setInput({\r\n      name: nameInputRef.current.value, \r\n      age: ageInputRef.current.value\r\n    });\r\n    \r\n  }\r\n\r\n  const checkValidity = (input) => {\r\n    // console.log(input.name);\r\n    if (input.name.trim().length === 0) { \r\n        setError({\r\n          title: \"no name found\",\r\n          message: \"please enter a name\",\r\n        });\r\n        return;\r\n    }\r\n    if(input.age.trim().length === 0){\r\n      setError({\r\n        title: \"no age found\",\r\n        message: \"please enter an age\",\r\n      });\r\n      return;\r\n    }\r\n    if(+input.age<1){\r\n      setError({\r\n        title: \"invalid age entered\",\r\n        message: \"please enter a positive int\",\r\n      });\r\n      return;\r\n    }\r\n    setError(null);\r\n  }\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const input = getInputs();\r\n    \r\n    if (\r\n      currentName.trim().length === 0 ||\r\n      currentAge.trim().length === 0 ||\r\n      +currentAge < 1\r\n    ) {\r\n      setError({\r\n        title: \"invalid input\",\r\n        message: \"please enter a name and a positive int\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(\"added: \" + currentName + \", who is \" + currentAge);\r\n    props.onAddUser(currentName, currentAge);\r\n    nameInputRef.current.value = '';\r\n    nameInputRef.current.value = '';\r\n  };\r\n\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          reset={errorHandler}\r\n        />\r\n      )}\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            ref={nameInputRef}\r\n          />\r\n          <div />\r\n          <label htmlFor=\"age\">Age [years(integer)]</label>\r\n          <input\r\n            id=\"age\"\r\n            type=\"number\"\r\n            ref={ageInputRef}\r\n          />\r\n          <Button type=\"submit\">Add User (using factoring)</Button>\r\n        </form>\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default AddUser3;\r\n"]},"metadata":{},"sourceType":"module"}