{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\React\\\\03-example-user-list-code-along\\\\src\\\\components\\\\Users\\\\AddUser3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser3 = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  var badInput = false; //const [error, setError] = useState();\n\n  const getInputs = () => {\n    console.log(\"values of input refs: \" + nameInputRef.current.value + \", \" + ageInputRef.current.value);\n    return {\n      name: nameInputRef.current.value,\n      age: ageInputRef.current.value\n    };\n  };\n\n  const checkValidity = input => {\n    // console.log(input.name);\n    if (input.name.trim().length === 0) {\n      return {\n        title: \"no name found\",\n        message: \"please enter a name\"\n      };\n    }\n\n    if (input.age.trim().length === 0) {\n      return {\n        title: \"no age found\",\n        message: \"please enter an age\"\n      };\n    }\n\n    if (+input.age < 1) {\n      return {\n        title: \"invalid age entered\",\n        message: \"please enter a positive int\"\n      };\n    } else {\n      return null;\n    }\n  }; // const saveAndReset = x => {\n  //   props.onAddUser(input.name, input.age);\n  //   nameInputRef.current.value = '';\n  //   ageInputRef.current.value = '';\n  //   console.log('name value after reset: '+ nameInputRef.current.value + 'age value after reset: '+ ageInputRef.current.value);\n  //   setInput({\n  //     name: nameInputRef.current.value,\n  //     age: ageInputRef.current.value\n  //   });\n  // }\n  //\n\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const input = getInputs();\n    console.log(\"values of input after 'getInputs()': \" + input.name + \", \" + input.age);\n    const error = checkValidity(input);\n    badInput = error; // if (input.name.trim().length === 0) {\n    //   setError({\n    //     title: \"no name found\",\n    //     message: \"please enter a name\",\n    //   });\n    //   return;\n    // }\n    // if (input.age.trim().length === 0) {\n    //   setError({\n    //     title: \"no age found\",\n    //     message: \"please enter an age\",\n    //   });\n    //   return;\n    // }\n    // if (+input.age < 1) {\n    //   setError({\n    //     title: \"invalid age entered\",\n    //     message: \"please enter a positive int\",\n    //   });\n    //   return;\n    // }\n\n    if (!error) {\n      console.log(\"no error\");\n      console.log(\"added: \" + input.name + \", who is \" + input.age);\n      props.onAddUser(input.name, input.age);\n      nameInputRef.current.value = \"\";\n      ageInputRef.current.value = \"\";\n    }\n  };\n\n  const errorHandler = () => {\n    badInput = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [badInput && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: badInput.title,\n      message: badInput.message,\n      reset: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age [years(integer)]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User (using factoring)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser3, \"kqk3aIn5fql5eeD48xMYGAyVaVM=\");\n\n_c = AddUser3;\nexport default AddUser3;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser3\");","map":{"version":3,"sources":["D:/Dev/React/03-example-user-list-code-along/src/components/Users/AddUser3.js"],"names":["React","useState","useRef","Card","classes","Button","ErrorModal","Wrapper","AddUser3","props","nameInputRef","ageInputRef","badInput","getInputs","console","log","current","value","name","age","checkValidity","input","trim","length","title","message","addUserHandler","event","preventDefault","error","onAddUser","errorHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,YAAY,GAAGR,MAAM,EAA3B;AACA,QAAMS,WAAW,GAAGT,MAAM,EAA1B;AAEA,MAAIU,QAAQ,GAAG,KAAf,CAJ0B,CAK1B;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CACE,2BACEL,YAAY,CAACM,OAAb,CAAqBC,KADvB,GAEE,IAFF,GAGEN,WAAW,CAACK,OAAZ,CAAoBC,KAJxB;AAMA,WAAO;AACLC,MAAAA,IAAI,EAAER,YAAY,CAACM,OAAb,CAAqBC,KADtB;AAELE,MAAAA,GAAG,EAAER,WAAW,CAACK,OAAZ,CAAoBC;AAFpB,KAAP;AAID,GAXD;;AAaA,QAAMG,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA,QAAIA,KAAK,CAACH,IAAN,CAAWI,IAAX,GAAkBC,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,aAAM;AACJC,QAAAA,KAAK,EAAE,eADH;AAEJC,QAAAA,OAAO,EAAE;AAFL,OAAN;AAID;;AACD,QAAIJ,KAAK,CAACF,GAAN,CAAUG,IAAV,GAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,aAAM;AACJC,QAAAA,KAAK,EAAE,cADH;AAEJC,QAAAA,OAAO,EAAE;AAFL,OAAN;AAID;;AACD,QAAI,CAACJ,KAAK,CAACF,GAAP,GAAa,CAAjB,EAAoB;AAClB,aAAO;AACLK,QAAAA,KAAK,EAAE,qBADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAID,KALD,MAKO;AACL,aAAO,IAAP;AACD;AACF,GAtBD,CApB0B,CA4C1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMP,KAAK,GAAGR,SAAS,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CACE,0CAA0CM,KAAK,CAACH,IAAhD,GAAuD,IAAvD,GAA8DG,KAAK,CAACF,GADtE;AAGA,UAAMU,KAAK,GAAGT,aAAa,CAACC,KAAD,CAA3B;AACAT,IAAAA,QAAQ,GAAGiB,KAAX,CARgC,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,CAACA,KAAL,EAAY;AACVf,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYM,KAAK,CAACH,IAAlB,GAAyB,WAAzB,GAAuCG,KAAK,CAACF,GAAzD;AACAV,MAAAA,KAAK,CAACqB,SAAN,CAAgBT,KAAK,CAACH,IAAtB,EAA4BG,KAAK,CAACF,GAAlC;AACAT,MAAAA,YAAY,CAACM,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACAN,MAAAA,WAAW,CAACK,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACD;AACF,GAtCD;;AAwCA,QAAMc,YAAY,GAAG,MAAM;AACzBnB,IAAAA,QAAQ,GAAG,KAAX;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAA,eACGA,QAAQ,iBACP,QAAC,UAAD;AACE,MAAA,KAAK,EAAEA,QAAQ,CAACY,KADlB;AAEE,MAAA,OAAO,EAAEZ,QAAQ,CAACa,OAFpB;AAGE,MAAA,KAAK,EAAEM;AAHT;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE3B,OAAO,CAACiB,KAAzB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,cAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,MAA1B;AAAiC,UAAA,GAAG,EAAEhB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,EAAE,EAAC,KAAV;AAAgB,UAAA,IAAI,EAAC,QAArB;AAA8B,UAAA,GAAG,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3HD;;GAAMH,Q;;KAAAA,Q;AA6HN,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport Wrapper from \"../Helpers/Wrapper\";\r\n\r\nconst AddUser3 = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n\r\n  var badInput = false;\r\n  //const [error, setError] = useState();\r\n\r\n  const getInputs = () => {\r\n    console.log(\r\n      \"values of input refs: \" +\r\n        nameInputRef.current.value +\r\n        \", \" +\r\n        ageInputRef.current.value\r\n    );\r\n    return {\r\n      name: nameInputRef.current.value,\r\n      age: ageInputRef.current.value,\r\n    };\r\n  };\r\n\r\n  const checkValidity = (input) => {\r\n    // console.log(input.name);\r\n    if (input.name.trim().length === 0) {\r\n      return{\r\n        title: \"no name found\",\r\n        message: \"please enter a name\",\r\n      };\r\n    }\r\n    if (input.age.trim().length === 0) {\r\n      return{\r\n        title: \"no age found\",\r\n        message: \"please enter an age\",\r\n      };\r\n    }\r\n    if (+input.age < 1) {\r\n      return {\r\n        title: \"invalid age entered\",\r\n        message: \"please enter a positive int\",\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // const saveAndReset = x => {\r\n  //   props.onAddUser(input.name, input.age);\r\n  //   nameInputRef.current.value = '';\r\n  //   ageInputRef.current.value = '';\r\n  //   console.log('name value after reset: '+ nameInputRef.current.value + 'age value after reset: '+ ageInputRef.current.value);\r\n  //   setInput({\r\n  //     name: nameInputRef.current.value,\r\n  //     age: ageInputRef.current.value\r\n  //   });\r\n\r\n  // }\r\n\r\n  //\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const input = getInputs();\r\n    console.log(\r\n      \"values of input after 'getInputs()': \" + input.name + \", \" + input.age\r\n    );\r\n    const error = checkValidity(input);\r\n    badInput = error;\r\n\r\n    // if (input.name.trim().length === 0) {\r\n    //   setError({\r\n    //     title: \"no name found\",\r\n    //     message: \"please enter a name\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n    // if (input.age.trim().length === 0) {\r\n    //   setError({\r\n    //     title: \"no age found\",\r\n    //     message: \"please enter an age\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n    // if (+input.age < 1) {\r\n    //   setError({\r\n    //     title: \"invalid age entered\",\r\n    //     message: \"please enter a positive int\",\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (!error) {\r\n      console.log(\"no error\");\r\n      console.log(\"added: \" + input.name + \", who is \" + input.age);\r\n      props.onAddUser(input.name, input.age);\r\n      nameInputRef.current.value = \"\";\r\n      ageInputRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    badInput = false;\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {badInput && (\r\n        <ErrorModal\r\n          title={badInput.title}\r\n          message={badInput.message}\r\n          reset={errorHandler}\r\n        />\r\n      )}\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input id=\"username\" type=\"text\" ref={nameInputRef} />\r\n          <div />\r\n          <label htmlFor=\"age\">Age [years(integer)]</label>\r\n          <input id=\"age\" type=\"number\" ref={ageInputRef} />\r\n          <Button type=\"submit\">Add User (using factoring)</Button>\r\n        </form>\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AddUser3;\r\n"]},"metadata":{},"sourceType":"module"}